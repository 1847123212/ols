@@ -270,44 +271,36 @@
         LOG.log( Level.FINE, "Decoding Run Length Encoded data, sample count: {0}", samples );
 
         final int stopCounter = this.config.getStopCounter();
-
-        int old = buffer[0];
+        int count = 0;
         long time = 0;
         for ( int i = 0; i < samples; i++ )
         {
           if ( ( buffer[i] & 0x80000000 ) != 0 )
           {
-            // This is a "count"
-            if ( ( old & 0x80000000 ) != 0 )
+                         // This is a "count"
+            if(buffer[i] == 0xbfffffff)
             {
-              // Skip the first part of the stream if it is composed from
-              // repeated repeat-counts.
-              old = buffer[i];
-              LOG.log( Level.INFO, "Duplicate RLE count seen of {0} vs {1}!", new Object[] {
-                  ( buffer[i] & 0x7FFFFFFF ), ( old & 0x7FFFFFFF ) } );
-              continue;
+              // this is an overflow count missing msb
+              count = 0x7fffffff;
+            }
+            else
+            {
+               // normal count overides a previous overflow count 
+               count = (buffer[i] & 0x7fffffff);
             }
-
-            final int count = ( buffer[i] & 0x7FFFFFFF );
-            // simple increase the time value at which the next sample will
-            // occur...
-            LOG.log( Level.FINE, "RLE count seen of {0} times {1}.", new Object[] { count, buffer[i - 1] } );
-            time += count;
           }
           else
           {
-            if ( ( i >= stopCounter - 2 ) && ( rleTrigPos == 0 ) )
+             time += count;
+             // set the trigger position as a time value
+            if  (( i >= (trigcount  )) && ( rleTrigPos == 0 ) )   //***DSF 
             {
-              // We're reading the samples backwards; hence we need to invert
-              // the trigger position...
-              rleTrigPos = samples - values.size();
+                rleTrigPos = time;    //***DSF trig pos is a time 
             }
 
             // add the read sample & add a timestamp value as well...
             values.add( buffer[i] );
             timestamps.add( time++ );
-
-            old = buffer[i];
           }
         }
 
@@ -449,8 +457,9 @@
       }
 
       size = ( ( ( stopCounter - 4 ) & 0x3fffc ) << 14 ) | ( ( ( readCounter & 0x3fffc ) >> 2 ) - 1 );
+ 
     }
-
+    trigcount = (size & 0xffff)*4 - ((size >> 16)& 0xffff)*4;//***DSF   use values sent to OLS
     if ( this.config.isRleEnabled() )
     {
       flags |= FLAG_RLE;
